"""
Django settings for ecomstore project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # Make sure 'os' is imported for os.path.join
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+ipa@%lb+w*jr-*gui!k($#%of=oxxf_u(8br_smg#x!giotjl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ 'localhost',
    '127.0.0.1',
    # ADD THIS LINE TO ALLOW ANY ngrok-free.app SUBDOMAIN
    '.ngrok-free.app',]

# --- ADD OR MODIFY THIS SECTION ---
CSRF_TRUSTED_ORIGINS = [
    'http://localhost',
    'http://127.0.0.1',
    # ADD THIS LINE to trust all ngrok domains over HTTPS
    'https://*.ngrok-free.app', 
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.humanize',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_db_logger',
    'preview',  # Your app name
    'products',
    'cart', # Your app name
    'checkout',
    'widget_tweaks',
    'wishlist',
    'crispy_bootstrap5',
    'crispy_forms',
    'core',
    'analytics',  # Your app name
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecomstore.urls'

# In ecomstore/settings.py

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static', # <-- ADD THIS LINE
                'ecomstore.context_processors.site_name',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecomstore.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Change engine to mysql
        'NAME': 'ecomstore_db',             # Your MySQL database name
        'USER': 'root',                     # Your MySQL username
        'PASSWORD': 'Omowunmi77897789*',      # Your MySQL password
        'HOST': 'localhost',                # Your MySQL host (e.g., 'localhost', IP address, or cloud URL)
        'PORT': '3306',                     # MySQL default port, usually 3306
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Add this to tell Django where to find your project-level static files
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files (user-uploaded content)
# https://docs.djangoproject.com/en/5.2/topics/files/

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False, # Keep Django's default loggers

    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {asctime} {message}',
            'style': '{',
        },
    },

    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'db_log_handler': {
            'level': 'INFO', # Or 'DEBUG' to capture more, 'ERROR' for only errors
            'class': 'django_db_logger.db_log_handler.DatabaseLogHandler',
            'formatter': 'verbose', # Use verbose formatter for more details in DB
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose',
            # Only send emails when DEBUG is False
            'filters': ['require_debug_false'],
        },
    },

    'loggers': {
        'django': {
            'handlers': ['console', 'db_log_handler'], # Send Django's logs to console and DB
            'level': 'INFO', # General Django logging level
            'propagate': True,
        },
        'django.request': {
            'handlers': ['db_log_handler', 'mail_admins'], # Send request errors to DB and email
            'level': 'ERROR', # Only log errors for requests
            'propagate': False, # Don't propagate to 'django' logger to avoid duplicates
        },
        'your_app_name': { # Replace 'your_app_name' with your actual app name
            'handlers': ['console', 'db_log_handler'],
            'level': 'DEBUG', # Or INFO, WARNING, ERROR, CRITICAL
            'propagate': False, # Important if you don't want logs duplicated by parent loggers
        },
        'db': { # This is the logger used by django-db-logger's default handler
            'handlers': ['db_log_handler'],
            'level': 'INFO',
            'propagate': False,
        },
    },

    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        }
    }
}

# Don't forget to define ADMINS in settings.py if using AdminEmailHandler
ADMINS = [
    ('Mike7789', 'Dotunm85@gmail.com'),
]

LOGIN_REDIRECT_URL = 'home' # URL name to redirect to after successful login
LOGOUT_REDIRECT_URL = 'home' # URL name to redirect to after successful logout
LOGIN_URL = 'login' # The URL name for your login page (where users are redirected if login is required)

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com' # Or your email provider's host
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'Dotunm85@gmail.com' # Replace with your sender email
# EMAIL_HOST_PASSWORD = 'lesl qphu sngy ssbd' # Replace with your app password or email password
# ecomstore/ecomstore/settings.py

# --- Email Configuration for Contact Form ---
# For development: This will print emails to your console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# The email address that will appear as the sender
DEFAULT_FROM_EMAIL = 'Dotunm85@gmail.com' # Must match EMAIL_HOST_USER if using SMTP

# The email address(es) where contact form submissions will be sent
CONTACT_EMAIL = 'Dotunm85@gmail.com' # Replace with your desired recipient email

# Crispy Forms settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

SITE_NAME = 'Excellent Fashion Wares'

PAYSTACK_PUBLIC_KEY = config('PAYSTACK_PUBLIC_KEY')
PAYSTACK_SECRET_KEY = config('PAYSTACK_SECRET_KEY')